<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="/stylesheets/output.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&display=swap" rel="stylesheet">
    <style> .font-orbitron { font-family: 'Orbitron', sans-serif; } </style>
</head>
<body class="bg-slate-900 text-gray-300">
    <div class="fixed inset-0 z-[-1] bg-gradient-to-br from-gray-900 via-[#2a0c0c] to-red-900/70"></div>
    <header class="absolute top-0 left-0 w-full p-4 md:p-6 z-20">
        <div class="max-w-7xl mx-auto flex justify-between items-center">
            <div>
                <h1 class="font-orbitron text-lg font-bold text-white">Team: <span class="text-red-400"><%= user.teamId %></span></h1>
                <p class="text-xs text-gray-400">Delegate: <span class="font-medium text-gray-300"><%= user.delegateId %></span></p>
            </div>
             <div id="timer" class="font-orbitron text-xl font-bold bg-red-500/10 text-red-300 px-4 py-2 rounded-lg border border-red-500/30">60:00</div>
            <form action="/api/logout" method="POST">
                <button type="submit" class="bg-red-600/80 hover:bg-red-700/80 text-white font-bold py-2 px-4 rounded-lg">Logout</button>
            </form>
        </div>
    </header>

    <main class="min-h-screen flex flex-col items-center justify-center text-center p-4">
        <div class="max-w-2xl w-full bg-slate-800/50 border border-red-500/30 rounded-lg p-8 shadow-2xl">
            <h1 class="font-orbitron text-4xl font-black text-red-500">Final Challenge</h1>
            <p class="mt-4 text-lg text-red-300">Your answer will stop the team's final time. You have one hour.</p>
            
            <div class="mt-8 text-left space-y-4">
                <p class="font-bold text-white text-lg">[YOUR FINAL QUESTION HERE]</p>
            </div>

            <form id="finalChallengeForm" class="mt-8 flex flex-col items-center gap-4">
                <input type="text" id="finalAnswer" name="finalAnswer" class="form-input w-full max-w-sm text-center font-orbitron tracking-widest uppercase px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 outline-none" placeholder="Enter Final Answer">
                <button type="submit" class="w-full max-w-sm font-bold text-lg text-white bg-red-600 hover:bg-red-700 py-3 rounded-lg">Submit Final Answer</button>
            </form>
            <p id="message" class="text-center text-sm mt-4 min-h-[20px]"></p>
        </div>
    </main>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
        let startTime = Date.now();
        let timerInterval;

        function startTimer(duration) {
            let timeLeft = duration;
            const timerElement = document.getElementById("timer");
            timerInterval = setInterval(() => {
                timeLeft--;
                const minutes = Math.floor(timeLeft / 60);
                let seconds = timeLeft % 60;
                seconds = seconds < 10 ? "0" + seconds : seconds;
                timerElement.textContent = `${minutes}:${seconds}`;
                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    window.location.href = '/thank-you'; // Or a timeout page
                }
            }, 1000);
        }
        startTimer(3600); // 1 hour

        const teamId = '<%= user.teamId %>';
        const delegateId = '<%= user.delegateId %>';
        const socket = io();
        socket.on('connect', () => socket.emit('join-room', { teamId, delegateId }));

        socket.on('final-challenge-complete', (data) => {
            window.location.href = data.redirectUrl;
        });

        const form = document.getElementById('finalChallengeForm');
        const messageEl = document.getElementById('message');
        const answerInput = document.getElementById('finalAnswer');
        const submitButton = form.querySelector('button');

        const progressRes = await fetch('/api/get-progress');
        const progress = await progressRes.json();
        if (progress.solvedQuestions && progress.solvedQuestions.includes('final-q1')) {
            messageEl.className = 'text-center text-sm mt-4 text-green-400';
            messageEl.textContent = 'Challenge already completed by your team. Redirecting...';
            setTimeout(() => window.location.href = '/thank-you', 2000);
            answerInput.disabled = true;
            submitButton.disabled = true;
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            messageEl.textContent = '';
            const finalAnswer = answerInput.value;
            const timeTakenSec = Math.floor((Date.now() - startTime) / 1000);

            try {
                const response = await fetch('/api/submit-final', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ finalAnswer, timeTakenSec })
                });
                const result = await response.json();
                if (response.ok && result.success) {
                    messageEl.className = 'text-center text-sm mt-4 text-green-400';
                    messageEl.textContent = 'Correct! Awaiting team redirect...';
                    answerInput.disabled = true;
                    submitButton.disabled = true;
                } else {
                    messageEl.className = 'text-center text-sm mt-4 text-red-400';
                    messageEl.textContent = result.message || 'Incorrect answer.';
                }
            } catch (error) {
                messageEl.className = 'text-center text-sm mt-4 text-red-400';
                messageEl.textContent = 'A network error occurred.';
            }
        });
    });
</script>
</body>
</html>

